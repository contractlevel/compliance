{
    "files": [
       "./certora/harness/Harness.sol",
       "lib/chainlink/contracts/src/v0.8/shared/token/ERC677/ERC677.sol",
       "lib/chainlink/contracts/src/v0.8/tests/MockV3Aggregator.sol",
       "./test/mocks/MockAutomationRegistry.sol",
       "./test/mocks/MockForwarder.sol",
       "./test/mocks/MockEverestConsumer.sol",
       "./certora/harness/LogicHarness.sol",
       "./certora/harness/NonLogic.sol",
    ],
    "verify": "Harness:./certora/spec/Compliant.spec",
    "wait_for_results": "all",
    "msg": "Verification of CompliantRouter",
    "rule_sanity": "basic",
    "optimistic_loop": true,
    "optimistic_fallback": true,
    "optimistic_hashing": true,
    "link": [
        "Harness:i_everest=MockEverestConsumer",
        "Harness:i_link=ERC677",
        "Harness:i_linkUsdFeed=MockV3Aggregator",
        "Harness:i_forwarder=MockForwarder",
        "MockForwarder:s_registry=MockAutomationRegistry",
        "MockAutomationRegistry:i_link=ERC677",
        "MockEverestConsumer:i_link=ERC677",
        "LogicHarness:i_compliantRouter=Harness",
    ],
    "parametric_contracts": "Harness",
    "mutations": {
        "gambit": {
            "filename": "./src/CompliantRouter.sol"
        }
    },
    "rule": "checkLog_revertsWhen_invalidLogEvent"
}